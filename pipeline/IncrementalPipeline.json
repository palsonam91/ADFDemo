{
	"name": "IncrementalPipeline",
	"properties": {
		"activities": [
			{
				"name": "LookupOldWatermarkvalue",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select TableName,Watermarkvalue from dbo.WaterMark where TableName='@{pipeline().parameters.TableName}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Incrementalwatermarksink",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LookupNewWatermarkvalue",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select  max(@{pipeline().parameters.NewTime}) as NewWatermarkvalue from @{pipeline().parameters.TableName}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "IncrementalOrder",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LookupOldWatermarkvalue",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupNewWatermarkvalue",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * from @{pipeline().parameters.TableName} where @{pipeline().parameters.NewTime}>'@{activity('LookupOldWatermarkvalue').output.firstRow.Watermarkvalue}' and @{pipeline().parameters.NewTime}<='@{activity('LookupNewWatermarkvalue').output.firstRow.NewWatermarkvalue}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "IncrementalOrder",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Incrementalordersink",
						"type": "DatasetReference",
						"parameters": {
							"TableName": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "set watermark",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spsetwatermark]",
					"storedProcedureParameters": {
						"newtime": {
							"value": {
								"value": "@activity('LookupNewWatermarkvalue').output.firstRow.NewWatermarkvalue",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"tablename": {
							"value": {
								"value": "@activity('LookupOldWatermarkvalue').output.firstRow.TableName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "IncrementalSink",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"TableName": {
				"type": "string",
				"defaultValue": "orders"
			},
			"NewTime": {
				"type": "string",
				"defaultValue": "InsertDateTime"
			}
		},
		"folder": {
			"name": "Incremental"
		},
		"annotations": [],
		"lastPublishTime": "2021-03-23T21:08:21Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}